

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 13%;
    --foreground: 0 0% 98%;

    --card: 0 0% 15%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 13%;
    --popover-foreground: 0 0% 98%;

    --primary: 288 83% 54%;
    --primary-foreground: 0 0% 98%;

    --secondary: 135 40% 15%;
    --secondary-foreground: 0 0% 98%;

    --tertiary: 46 68% 54%;
    --tertiary-foreground: 0 0% 13%;

    --muted: 160 40% 15%;
    --muted-foreground: 0 0% 60%;

    --accent: 180 100% 50%;
    --accent-foreground: 0 0% 13%;

    --destructive: 0 63% 31%;
    --destructive-foreground: 0 0% 98%;

    --border: 135 40% 25%;
    --input: 160 40% 25%;
    --ring: 180 100% 50%;

    --radius: 0.5rem;
  }
}

@layer base {
  html.lenis {
    height: auto;
  }
  .lenis.lenis-smooth {
    scroll-behavior: auto !important;
  }
  .lenis.lenis-stopped {
    overflow: hidden;
  }
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  
  /* Hide default cursor on interactive elements for custom cursor */
  @media (hover: hover) and (pointer: fine) {
    body, a, button, input, textarea, select, .flip-card-container, .game-card-clickable, .event-card-clickable, .holographic-card, .bio-id-scanner, .group {
      cursor: none;
    }
  }
}

@layer utilities {
  /* Header glassmorphism and circuit pattern */
  .cyber-header {
    background-color: hsl(var(--background) / 0.7);
    backdrop-filter: blur(8px);
    /* Subtle SVG circuit pattern */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.05'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }

  /* Nav Link Styling */
  .cyber-nav-link {
    @apply relative flex items-center gap-2 px-3 py-2 text-sm font-medium transition-colors hover:text-primary;
    z-index: 1;
  }

  /* Glitch animation for nav item hover */
  .cyber-nav-link:hover .nav-link-text {
    animation: nav-glitch 0.3s linear infinite;
  }

  @keyframes nav-glitch {
    0%, 100% {
      transform: translate(0, 0);
    }
    25% {
      transform: translate(1px, -1px);
    }
    50% {
      transform: translate(-1px, 1px);
    }
    75% {
      transform: translate(1px, 1px);
    }
  }

  /* Sliding box for active nav link */
  .sliding-box {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    height: 2.25rem; /* 36px */
    background-color: hsl(var(--primary));
    box-shadow: 0 0 8px hsl(var(--primary) / 0.9);
    transition: left 0.4s cubic-bezier(0.25, 1, 0.5, 1), width 0.4s cubic-bezier(0.25, 1, 0.5, 1);
    clip-path: polygon(8px 0, 100% 0, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0 100%, 0 8px);
    z-index: 0;
  }

  .text-glow-primary {
    text-shadow: 0 0 8px hsl(var(--primary) / 0.9);
  }
  .text-glow-accent {
    text-shadow: 0 0 8px hsl(var(--accent) / 0.9);
  }
  .box-glow-primary {
    box-shadow: 0 0 5px hsl(var(--primary)), 0 0 15px hsl(var(--primary)), 0 0 30px hsl(var(--primary));
  }
  .box-glow-accent {
    box-shadow: 0 0 5px hsl(var(--accent)), 0 0 15px hsl(var(--accent)), 0 0 30px hsl(var(--accent));
  }

  /* MINIMALISTIC & FUTURISTIC GLITCH EFFECT */
  .glitch-layers {
    position: relative;
    color: hsl(var(--foreground));
  }

  .glitch-layers::after,
  .glitch-layers::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparent;
    overflow: hidden;
    clip-path: inset(0 0 0 0);
  }

  /* Primary color glitch layer */
  .glitch-layers::before {
    left: 1px;
    text-shadow: -1px 0 hsl(var(--primary));
    color: hsl(var(--foreground));
    animation: glitch-anim-1 2.5s infinite linear alternate-reverse;
  }
  
  /* Accent color glitch layer */
  .glitch-layers::after {
    left: -1px;
    text-shadow: -1px 0 hsl(var(--accent));
    color: hsl(var(--foreground));
    animation: glitch-anim-2 3s infinite linear alternate-reverse;
  }

  @keyframes glitch-anim-1 {
    0% { clip-path: inset(30% 0 60% 0); }
    10% { clip-path: inset(90% 0 5% 0); }
    20% { clip-path: inset(20% 0 30% 0); transform: translate(-0.025em, 0); }
    30% { clip-path: inset(55% 0 10% 0); }
    40% { clip-path: inset(10% 0 85% 0); transform: translate(0.025em, 0); }
    50% { clip-path: inset(70% 0 25% 0); }
    60% { clip-path: inset(40% 0 40% 0); transform: translate(0, 0.025em); }
    70% { clip-path: inset(95% 0 2% 0); }
    80% { clip-path: inset(15% 0 70% 0); transform: translate(0, -0.025em); }
    90% { clip-path: inset(65% 0 5% 0); }
    100% { clip-path: inset(35% 0 50% 0); }
  }

  @keyframes glitch-anim-2 {
    0% { clip-path: inset(80% 0 10% 0); transform: translate(0.01em, -0.01em); }
    15% { clip-path: inset(5% 0 92% 0); }
    25% { clip-path: inset(45% 0 50% 0); transform: translate(-0.01em, 0.01em); }
    40% { clip-path: inset(70% 0 5% 0); }
    55% { clip-path: inset(25% 0 65% 0); transform: translate(0.01em, 0.01em); }
    65% { clip-path: inset(5% 0 80% 0); }
    80% { clip-path: inset(50% 0 35% 0); transform: translate(-0.01em, -0.01em); }
    90% { clip-path: inset(90% 0 2% 0); }
    100% { clip-path: inset(30% 0 55% 0); }
  }
  
  .terminal-caret {
    animation: blink 1s step-end infinite;
  }

  .terminal-caret-inline {
    display: inline-block;
    vertical-align: middle;
    width: 0.5rem;
    height: 1rem;
    background-color: hsl(var(--accent));
    animation: blink 1s step-end infinite;
    margin-left: 0.25rem;
  }

  @keyframes blink {
    from, to {
      background-color: transparent;
    }
    50% {
      background-color: hsl(var(--accent));
    }
  }

  /* Custom Cyberpunk Button Start */
  .cyber-button {
    position: relative;
    border: none;
    background: linear-gradient(145deg, hsl(var(--primary)), hsl(var(--accent)));
    padding: 2px;
    clip-path: polygon(10px 0, 100% 0, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0 100%, 0 10px);
    transition: filter 0.3s ease-out, transform 0.3s cubic-bezier(0.25, 1, 0.5, 1);
    outline: none;
    cursor: none;
    animation: cyber-glow-flicker 4s linear infinite;
  }
  
  .cyber-button:hover {
    filter: drop-shadow(0 0 10px hsl(var(--accent) / 0.9)) drop-shadow(0 0 20px hsl(var(--accent) / 0.6));
    transform: translateY(-4px);
  }

  .cyber-button.is-selected {
     filter: drop-shadow(0 0 8px hsl(var(--primary))) drop-shadow(0 0 20px hsl(var(--primary))) drop-shadow(0 0 40px hsl(var(--primary) / 0.7));
  }

  .cyber-button-content {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1.75rem;
    font-family: var(--font-hacker);
    font-size: 1.125rem;
    font-weight: 700;
    color: hsl(var(--accent));
    background-color: hsl(var(--background));
    clip-path: inherit;
    transition: all 0.2s ease-out;
    position: relative; /* For shimmer */
    overflow: hidden; /* For shimmer */
  }

  .cyber-button-content::after { /* Shimmer effect */
    content: '';
    position: absolute;
    top: -50%;
    left: -75%;
    width: 50%;
    height: 200%;
    background: linear-gradient(
      to right,
      hsl(var(--accent) / 0),
      hsl(var(--accent) / 0.2),
      hsl(var(--accent) / 0)
    );
    transform: rotate(25deg);
    transition: left 1s cubic-bezier(0.23, 1, 0.32, 1);
    pointer-events: none;
  }

  .group:hover .cyber-button-content::after {
    left: 125%;
  }
  
  .cyber-button:hover .cyber-button-content {
    background-color: hsl(var(--card));
  }

  .cyber-button.is-selected .cyber-button-content {
    background: hsl(var(--card));
    color: hsl(var(--primary));
  }

  .cyber-button .cyber-button-text {
    position: relative;
    z-index: 1;
    text-transform: uppercase;
    white-space: nowrap;
  }

  .cyber-button svg {
    z-index: 1;
    transition: all 0.3s ease-out;
  }
  
  .cyber-button:hover svg {
    filter: drop-shadow(0 0 6px hsl(var(--accent)));
    transform: scale(1.1);
  }

  .cyber-button.is-selected svg {
    filter: drop-shadow(0 0 8px hsl(var(--primary)));
    transform: scale(1.1);
    color: hsl(var(--primary));
  }
  /* Custom Cyberpunk Button End */

  .custom-cursor {
    --cursor-size: 28px;
    --cursor-color: hsl(var(--accent));
    --cursor-stroke-width: 2px;
    
    position: fixed;
    width: var(--cursor-size);
    height: var(--cursor-size);
    transform: translate(-50%, -50%);
    pointer-events: none;
    z-index: 9999;
    opacity: 1;
    transition: transform 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275), opacity 0.2s ease-out;
  }

  .custom-cursor.is-hidden {
    opacity: 0;
  }

  .custom-cursor::before,
  .custom-cursor::after {
      content: '';
      position: absolute;
      background: var(--cursor-color);
      transition: transform 0.2s ease-out, background 0.2s ease-out;
  }

  .custom-cursor::before { /* Horizontal line */
      left: 0;
      top: 50%;
      width: 100%;
      height: var(--cursor-stroke-width);
      transform: translateY(-50%) scaleX(1);
  }

  .custom-cursor::after { /* Vertical line */
      left: 50%;
      top: 0;
      width: var(--cursor-stroke-width);
      height: 100%;
      transform: translateX(-50%) scaleY(1);
  }

  .custom-cursor.is-pointer {
      transform: translate(-50%, -50%) scale(1.5);
  }
  
  .custom-cursor.is-pointer::before {
      transform: translateY(-50%) scaleX(0.7);
  }

  .custom-cursor.is-pointer::after {
      transform: translateX(-50%) scaleY(0.7);
  }
  
  .custom-cursor.is-clicked::before,
  .custom-cursor.is-clicked::after {
    background: hsl(var(--primary));
  }

  .custom-cursor.is-shooting::before {
    animation: shoot-recoil-x 0.2s ease-out;
  }

  .custom-cursor.is-shooting::after {
    animation: shoot-recoil-y 0.2s ease-out;
  }

  @keyframes shoot-recoil-x {
    0% { transform: translateY(-50%) scaleX(1); }
    50% { transform: translateY(-50%) scaleX(1.8); background: hsl(var(--primary)); }
    100% { transform: translateY(-50%) scaleX(1); }
  }

  @keyframes shoot-recoil-y {
    0% { transform: translateX(-50%) scaleY(1); }
    50% { transform: translateX(-50%) scaleY(1.8); background: hsl(var(--primary)); }
    100% { transform: translateX(-50%) scaleY(1); }
  }

  .parallax-section {
    position: relative;
    overflow: hidden;
  }
  .parallax-section::before {
      content: '';
      position: absolute;
      inset: 0;
      background-image: radial-gradient(hsl(var(--primary) / 0.1) 1px, transparent 1px);
      background-size: 30px 30px;
      background-attachment: fixed;
      opacity: 0.5;
      z-index: 0;
  }
  
  /* Member Grid & Flip Card Styles */
  .member-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .flip-card-container {
    perspective: 1000px;
    width: 100%;
    aspect-ratio: 10 / 12;
  }

  .flip-card-flipper {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }

  .flip-card-container.flipped .flip-card-flipper {
    transform: rotateY(180deg);
  }

  .flip-card-front,
  .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden; /* Safari */
    backface-visibility: hidden;
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }
  
  .flip-card-back {
    transform: rotateY(180deg);
  }

  .animate-press {
    animation: button-press 0.3s ease-out;
  }

  @keyframes button-press {
    50% {
      transform: scale(0.95);
      background-color: hsl(var(--accent));
      color: hsl(var(--accent-foreground));
      box-shadow: 0 0 8px hsl(var(--primary)), 0 0 20px hsl(var(--primary));
    }
  }

  .animate-pulse-glow {
    animation: pulse-glow 5s infinite ease-in-out;
  }
  
  @keyframes pulse-glow {
    0%, 100% {
      transform: scale(1);
      box-shadow: 0 0 5px hsl(var(--accent)), 0 0 15px hsl(var(--accent)), 0 0 30px hsl(var(--accent));
    }
    10% {
      transform: scale(1.03);
      box-shadow: 0 0 10px hsl(var(--accent)), 0 0 30px hsl(var(--accent)), 0 0 60px hsl(var(--primary));
    }
    20% {
      transform: scale(1);
      box-shadow: 0 0 5px hsl(var(--accent)), 0 0 15px hsl(var(--accent)), 0 0 30px hsl(var(--accent));
    }
  }

  .animate-data-plug-in {
    animation: data-plug-in 0.7s ease-in-out forwards;
  }

  @keyframes data-plug-in {
    0% {
      transform: scale(1);
      box-shadow: none;
      filter: none;
    }
    20% {
      transform: scale(0.95) skewX(-5deg);
      background-color: hsl(var(--primary));
      color: hsl(var(--primary-foreground));
      box-shadow: 0 0 15px hsl(var(--accent)), 0 0 30px hsl(var(--accent));
      filter: brightness(1.5);
    }
    40% {
      transform: scale(1.05) skewX(5deg);
      filter: none;
    }
    60% {
      transform: scale(1);
      opacity: 1;
      filter: blur(1px);
    }
    100% {
      transform: scale(1.5);
      opacity: 0;
      filter: blur(10px);
    }
  }

  /* Base state for animated entries */
  .animate-entry {
    opacity: 0;
  }

  /* LEGO-style animations */
  @keyframes slide-in-top {
    from { opacity: 0; transform: translateY(-30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  .animate-entry.animate-slide-in-top.is-visible {
    animation: slide-in-top 0.7s cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }
  
  @keyframes slide-in-left {
    from { opacity: 0; transform: translateX(-30px); }
    to { opacity: 1; transform: translateX(0); }
  }
  .animate-entry.animate-slide-in-left.is-visible {
    animation: slide-in-left 0.7s cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }

  @keyframes slide-in-right {
    from { opacity: 0; transform: translateX(30px); }
    to { opacity: 1; transform: translateX(0); }
  }
  .animate-entry.animate-slide-in-right.is-visible {
    animation: slide-in-right 0.7s cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }
  
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  .animate-entry.animate-fade-in.is-visible {
    animation: fade-in 1s cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }

  @keyframes slide-up-fade {
    from { opacity: 0; transform: translateY(40px); }
    to { opacity: 1; transform: translateY(0); }
  }
  .animate-entry.animate-slide-up-fade.is-visible {
    animation: slide-up-fade 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }


  .animate-content-slide-in {
    opacity: 0;
    transform: translateX(-20px);
  }
  .animate-content-slide-in.is-visible {
    animation: content-slide-in 0.6s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }
  @keyframes content-slide-in {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }


  /* Page Transition Effect */
  .page-transition-effect::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: hsl(var(--background));
    z-index: 10000;
    pointer-events: none;
    animation: page-glitch-out 0.8s cubic-bezier(0.7, 0, 0.3, 1) forwards;
  }
    
  @keyframes page-glitch-out {
    0% {
        transform: translateY(0);
        opacity: 1;
    }
    20% {
        transform: translate(-5px, 5px) skewX(10deg);
        clip-path: inset(10% 0 85% 0);
        opacity: 0.8;
    }
    40% {
        transform: translate(5px, -5px) skewX(-10deg);
        clip-path: inset(70% 0 10% 0);
        opacity: 0.9;
    }
    60% {
        transform: translate(0, 0);
        clip-path: inset(40% 0 40% 0);
        opacity: 0.5;
    }
    99% {
        transform: translateY(-100%);
        opacity: 0;
        clip-path: inset(0 0 0 0);
    }
    100% {
        transform: translateY(-100%);
        opacity: 0;
        clip-path: inset(0 0 0 0);
        visibility: hidden;
    }
  }

  /* Nav Scroll Transition Effect */
  body.is-nav-scrolling::after {
    content: '';
    position: fixed;
    inset: 0;
    background: 
      repeating-linear-gradient(
        0deg,
        hsl(var(--accent) / 0.15),
        hsl(var(--accent) / 0.15) 1px,
        transparent 1px,
        transparent 3px
      );
    z-index: 10001;
    pointer-events: none;
    animation: nav-scroll-glitch 0.8s cubic-bezier(0.7, 0, 0.3, 1) forwards;
  }
    
  @keyframes nav-scroll-glitch {
    0% {
        opacity: 0;
        transform: scaleY(0);
        transform-origin: top;
    }
    30% {
        opacity: 0.8;
        transform: scaleY(1);
    }
    70% {
        opacity: 0.8;
        transform: scaleY(1);
        transform-origin: bottom;
    }
    100% {
        opacity: 0;
        transform: scaleY(0);
    }
  }

  /* Holographic Card Styles */
  .holographic-card {
    @apply relative w-full max-w-sm rounded-lg border-2 border-accent/30 bg-card/30 p-8 text-center transition-all duration-300 ease-out;
    transform-style: preserve-3d;
  }

  .holographic-card-glow {
    @apply absolute -inset-2 rounded-lg opacity-60 blur-lg;
    background: hsl(var(--accent));
    animation: holographic-flicker 4s linear infinite;
    z-index: -1;
  }

  .holographic-card-content {
    @apply relative z-10 flex flex-col items-center justify-center gap-4;
    transform: translateZ(50px); /* Pushes content forward for 3D effect */
  }

  .holographic-card::before { /* Scanlines */
    content: '';
    @apply absolute inset-0 z-0 opacity-10;
    background: repeating-linear-gradient(
      0deg,
      hsl(var(--accent) / 0.5),
      hsl(var(--accent) / 0.5) 1px,
      transparent 1px,
      transparent 3px
    );
    animation: scanlines 20s linear infinite;
    pointer-events: none;
  }

  .holographic-card::after { /* Noise */
    content: '';
    @apply absolute inset-0 z-0 opacity-[0.03];
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 600 600' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.5' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    pointer-events: none;
  }

  @keyframes holographic-flicker {
    0%, 100% {
      opacity: 0.5;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
  }

  @keyframes scanlines {
    from { transform: translateY(0); }
    to { transform: translateY(-100px); }
  }

  /* Neural Dive Transition */
  body.is-diving::after {
    content: '>>> ACCESSING 3D PROTOCOLS...';
    position: fixed;
    inset: 0;
    z-index: 10001;
    pointer-events: none;
    background: hsl(var(--background));
    color: hsl(var(--accent));
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: var(--font-code);
    font-size: 1.5rem;
    text-shadow: 0 0 5px hsl(var(--accent));
    animation: neural-dive-glitch 2s cubic-bezier(0.7, 0, 0.3, 1) forwards;
  }
    
  @keyframes neural-dive-glitch {
    0% {
        opacity: 0;
        transform: scale(1.1);
    }
    10% {
        opacity: 1;
        transform: scale(1);
        clip-path: inset(80% 0 10% 0);
    }
    30% {
        clip-path: inset(20% 0 70% 0);
    }
    50% {
        clip-path: inset(50% 0 45% 0);
        transform: translate(-2px, 2px) skewX(5deg);
    }
    70% {
        clip-path: inset(30% 0 30% 0);
        transform: translate(2px, -2px) skewX(-5deg);
    }
    90% {
        opacity: 1;
        clip-path: inset(0 0 0 0);
    }
    100% {
        opacity: 0;
        visibility: hidden;
    }
  }

  /* Cyberpunk Card Styles */
  .cyber-card-container {
    clip-path: polygon(0 20px, 20px 0, 100% 0, 100% calc(100% - 20px), calc(100% - 20px) 100%, 0 100%, 0 20px);
    position: relative;
    background: hsl(var(--card));
    padding: 2px; /* This creates the border */
    transition: all 0.3s ease-in-out;
  }
  
  .cyber-card-container::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(145deg, hsl(var(--primary) / 0.5), hsl(var(--accent) / 0.5));
    clip-path: inherit;
    z-index: 0;
    transition: all 0.3s ease-in-out;
    opacity: 0.8;
  }
  
  .group:hover .cyber-card-container::before {
    background: linear-gradient(145deg, hsl(var(--primary)), hsl(var(--accent)));
    opacity: 1;
  }

  .cyber-card-content {
    clip-path: inherit;
    background: hsl(var(--card));
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 1;
  }

  @keyframes cyber-glow-flicker {
    0%, 100% {
      filter: drop-shadow(0 0 2px hsl(var(--primary) / 0.7)) drop-shadow(0 0 4px hsl(var(--accent) / 0.7));
      opacity: 1;
    }
    50% {
      filter: drop-shadow(0 0 3px hsl(var(--accent) / 0.7)) drop-shadow(0 0 6px hsl(var(--primary) / 0.7));
      opacity: 0.8;
    }
  }

  .cyber-card-shimmer {
    position: relative;
    overflow: hidden;
  }
  
  .cyber-card-shimmer::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -75%;
    width: 50%;
    height: 200%;
    background: linear-gradient(
      to right,
      hsl(var(--accent) / 0),
      hsl(var(--accent) / 0.15),
      hsl(var(--accent) / 0)
    );
    transform: rotate(25deg);
    transition: left 1s cubic-bezier(0.23, 1, 0.32, 1);
    pointer-events: none;
  }

  .group:hover .cyber-card-shimmer::after {
    left: 125%;
  }

  @keyframes slide-in-left-fade {
    from {
      opacity: 0;
      transform: translateX(-40px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .animate-slide-in-left-fade {
    animation: slide-in-left-fade 0.7s cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }
  
  /* Hero Background Animation */
  @keyframes pan-left {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-pan-medium {
    animation: pan-left 30s linear infinite;
  }

  .stars-bg {
    background-image:
      radial-gradient(1px 1px at 20px 30px, hsl(var(--accent)), transparent),
      radial-gradient(1px 1px at 40px 70px, hsl(var(--primary)), transparent),
      radial-gradient(1px 1px at 80px 120px, #fff, transparent),
      radial-gradient(1.5px 1.5px at 160px 80px, hsl(var(--accent)), transparent),
      radial-gradient(1px 1px at 220px 180px, hsl(var(--primary)), transparent),
      radial-gradient(1px 1px at 290px 40px, #fff, transparent);
    background-size: 300px 200px;
    animation: twinkle 10s linear infinite;
  }
  @keyframes twinkle {
    from { background-position: 0 0; }
    to { background-position: -300px 200px; }
  }

  /* Hacker Overlay */
  .hacker-overlay {
    position: fixed;
    inset: 0;
    background-color: hsl(var(--background) / 0.7);
    backdrop-filter: blur(2px);
    z-index: 10000;
    font-family: var(--font-hacker);
    color: hsl(var(--accent));
    opacity: 1;
    transition: opacity 1s ease-out;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* To contain scanlines */
  }

  .hacker-overlay.is-fading-out {
    opacity: 0;
    pointer-events: none;
  }
  
  .hacker-overlay::before { /* Improved Scanlines */
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 200%; /* Make it taller to animate vertically */
    pointer-events: none;
    background: repeating-linear-gradient(
      0deg,
      hsla(0, 0%, 0%, 0),
      hsla(0, 0%, 0%, 0.15) 1px,
      hsla(0, 0%, 0%, 0) 2px
    );
    animation: scroll-scanlines 2s linear infinite;
  }

  @keyframes scroll-scanlines {
    0% { transform: translateY(0); }
    100% { transform: translateY(-50%); }
  }
  
  .hacker-overlay-content {
    position: relative;
  }

  .hacker-overlay-content::before,
  .hacker-overlay-content::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: inherit;
    overflow: hidden;
    white-space: pre-wrap;
  }

  .hacker-overlay-content::before {
    left: 2px;
    text-shadow: -2px 0 hsl(var(--primary));
    animation: crt-glitch 3s infinite linear alternate-reverse;
  }

  .hacker-overlay-content::after {
    left: -2px;
    text-shadow: -2px 0 hsl(180 100% 50% / 0.8), 2px 2px hsl(var(--primary));
    animation: crt-glitch 2s infinite linear alternate-reverse;
  }

  @keyframes crt-glitch {
    0% {
        transform: translate(0,0);
        clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%);
    }
    2% {
        clip-path: polygon(0 75%, 100% 75%, 100% 78%, 0 78%);
    }
    6% {
        clip-path: polygon(0 45%, 100% 45%, 100% 48%, 0 48%);
    }
    10% {
        transform: translate(2px, 1px) skewX(3deg);
        clip-path: polygon(0 60%, 100% 60%, 100% 62%, 0 62%);
    }
    15% {
        transform: translate(0,0) skewX(0);
        clip-path: polygon(0 0, 100% 0, 100% 2%, 0 2%);
    }
    30% {
        clip-path: polygon(0 92%, 100% 92%, 100% 98%, 0 98%);
    }
    50% {
        transform: translate(0, 0);
        clip-path: polygon(0 20%, 100% 20%, 100% 22%, 0 22%);
    }
    60% {
      transform: -1px, 2px) skewX(-5deg);
    }
    80% {
        transform: translate(0, 0) skewX(0);
        clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
    }
    85% {
        clip-path: polygon(0 15%, 100% 15%, 100% 18%, 0 18%);
    }
    100% {
        clip-path: polygon(0 75%, 100% 75%, 100% 78%, 0 78%);
    }
  }

  @keyframes tech-card-glow {
    0%,
    100% {
      box-shadow: inset 0 0 10px var(--glow-color);
      border-color: var(--glow-color);
    }
    50% {
      box-shadow: inset 0 0 20px var(--glow-color);
      border-color: var(--glow-color);
    }
  }

  /* Bio-ID Terminal Animations */
  @keyframes scan-line {
    0% {
      transform: translateY(-100%);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(100%);
      opacity: 0;
    }
  }
  @keyframes iris-pulse {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 1; }
  }
  .animate-scan-line {
    animation: scan-line 2s ease-in-out infinite;
  }
  .animate-iris-pulse {
    animation: iris-pulse 3s ease-in-out infinite;
  }
}

/* Contact Card Styles */
@layer components {
  /* Contact Terminal Animation */
  .terminal-container {
    @apply w-full max-w-5xl rounded-lg border-2 border-primary/30 bg-card/60 backdrop-blur-sm p-1 transition-all duration-500 ease-out;
    clip-path: inset(50% 50% 50% 50%);
    opacity: 0;
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
  }
  .terminal-container.is-active {
    clip-path: inset(0% 0% 0% 0%);
    opacity: 1;
  }
  .terminal-header {
    @apply flex items-center justify-between p-3 bg-card rounded-t-md border-b border-primary/20;
  }
  .terminal-body {
    @apply p-4 md:p-8;
  }
  .animate-text-reveal {
    opacity: 0;
    transform: translateY(10px);
    animation: text-reveal 0.5s ease-out forwards;
  }
  @keyframes text-reveal {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}
